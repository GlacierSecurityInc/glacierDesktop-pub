name: Build

on: push

# Prevents a race condition when building on `main` and updating releases
concurrency: ci-${{ github.ref }}

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    env:
      ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
      ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder

    steps:
      - uses: actions/checkout@v1

      - name: Checkout submodules using a PAT
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.PERSONAL_ACCESS_TOKEN }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive --remote

      - uses: actions/setup-node@v2
        with:
          node-version: '15'
          cache: 'npm'

      - name: Cache Electron
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Electron-Builder
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      - name: Codesign on macOS
        if: runner.os == 'macOS'
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p $MACOS_KEYCHAIN_PASSWORD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_KEYCHAIN_PASSWORD build.keychain
          security import certificate.p12 -k build.keychain -P "" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $MACOS_KEYCHAIN_PASSWORD build.keychain

      - name: Install dependencies
        run: npm i

      - name: Build app
        run: npm run build

      - name: Read package.json
        uses: tyankatsu0105/read-package-version-actions@v1
        id: package-version

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          path: ./CHANGELOG.md
          version: 'Unreleased'

      # TODO: ideally this would be made obsolete by the next action.
      # See: https://github.com/softprops/action-gh-release/issues/103
      - name: Delete current draft release, if exists
        uses: hugo19941994/delete-draft-releases@v0.1.0
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create draft release (only on untagged commits)
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          name: 'v${{ steps.package-version.outputs.version }}'
          body: ${{ steps.changelog_reader.outputs.changes }}
          tag_name: 'v${{ steps.package-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package app & update release
        if: github.ref == 'refs/heads/main'
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package app without updating release
        if: github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/tags/') != true
        run: npm run dist -- -p never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: dist/*.dmg
