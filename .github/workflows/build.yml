name: Build release / release candidate

on:
  push:
    branches:
      - main
    tags:
      - v*

# Prevents a race condition when building on `main` and updating releases
concurrency: ci-${{ github.ref }}

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    env:
      ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
      ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder

    steps:
      - uses: actions/checkout@v1

      - name: Get short SHA of GlacierDesktop
        id: glacierDesktopSHA
        run: |
          echo "::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)"

      - name: Checkout submodule using a PAT
        id: converseCheckout
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.PERSONAL_ACCESS_TOKEN }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive --remote
          cd libs/vendor/converse.js
          echo "::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)"

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Cache Converse.js dependencies
        uses: c-hive/gha-npm-cache@v1
        with:
          directory: libs/vendor/converse.js

      - name: Cache Electron
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Electron-Builder
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      - name: Codesign on macOS
        if: runner.os == 'macOS'
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p $MACOS_KEYCHAIN_PASSWORD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_KEYCHAIN_PASSWORD build.keychain
          security import certificate.p12 -k build.keychain -P "" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $MACOS_KEYCHAIN_PASSWORD build.keychain

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get app version
        id: package-version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Get build number
        id: buildNum
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

      - name: Build metadata (draft release version)
        if: github.ref == 'refs/heads/main'
        run: yarn build:metadata
        env:
          GLACIER_BRANCH: main
          CONVERSE_BRANCH: master
          GLACIER_SHA: ${{ steps.glacierDesktopSHA.outputs.SHA_SHORT }}
          CONVERSE_SHA: ${{ steps.converseCheckout.outputs.SHA_SHORT }}
          VERSION: ${{ steps.package-version.outputs.version }}
          BUILD_NUMBER: ${{ steps.buildNum.outputs.build_number }}

      - name: Build metadata (release version)
        if: github.ref != 'refs/heads/main'
        run: yarn build:metadata
        env:
          VERSION: ${{ steps.package-version.outputs.version }}

      - name: Build app
        run: yarn build

      - name: Get changelog version
        id: changelogHeader
        run: |
          if [ $REF == "refs/heads/main" ]; then
              echo "::set-output name=version::Unreleased"
            else
              echo "::set-output name=version::$VERSION"
            fi
        env:
          REF: ${{ github.ref }}
          VERSION: ${{ steps.package-version.outputs.version }}

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          path: ./CHANGELOG.md
          version: ${{ steps.changelogHeader.outputs.version }}

      # TODO: ideally this would be made obsolete by the next action.
      # See: https://github.com/softprops/action-gh-release/issues/103
      - name: Delete current draft release, if exists
        uses: hugo19941994/delete-draft-releases@v0.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create draft release (if untagged commit)
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          draft: true
          name: 'v${{ steps.package-version.outputs.version }}'
          body: ${{ steps.changelog_reader.outputs.changes }}
          tag_name: 'v${{ steps.package-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package app & update release
        run: yarn dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - name: Reset build number to 1 if tagged commit
        if: github.ref != 'refs/heads/main'
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/build-number-1",
              sha: context.sha
            })

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: dist/*.dmg
