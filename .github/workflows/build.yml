name: Build the Release or Release Candidate

on:
  push:
    paths:
      - 'CHANGELOG.md'
    branches:
      - main
    tags:
      - v*

# Prevents a race condition when building on `main` and updating releases
concurrency: ci-${{ github.ref }}

jobs:
  pre_build_skips:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content_newer'

  build:
    needs: pre_build_skips
    if: ${{ needs.pre_build_skips.outputs.should_skip != 'true' }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}

    env:
      ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
      ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder

    steps:
      - name: Checkout glacierDesktop code
        uses: actions/checkout@v1

      - name: Get short SHA of glacierDesktop
        id: glacierDesktopSHA
        run: |
          echo "::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)"

      - name: Checkout Converse.js submodule code
        id: converseCheckout
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.PERSONAL_ACCESS_TOKEN }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive --remote
          cd libs/vendor/converse.js
          echo "::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)"

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Cache Converse.js dependencies
        uses: c-hive/gha-npm-cache@v1
        with:
          directory: libs/vendor/converse.js

      - name: Cache Electron
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Electron-Builder
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      - name: Code Sign on macOS
        if: runner.os == 'macOS'
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p $MACOS_KEYCHAIN_PASSWORD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_KEYCHAIN_PASSWORD build.keychain
          security import certificate.p12 -k build.keychain -P "" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $MACOS_KEYCHAIN_PASSWORD build.keychain

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get app version
        id: package-version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Get build number
        id: buildNum
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

      - name: Compute artifact name
        id: artifactName
        run: |
          echo "::set-output name=NAME::$(echo 'GlacierDesktopBeta ${{ steps.package-version.outputs.version }} bld_${{ steps.buildNum.outputs.build_number }} main_${{ steps.glacierDesktopSHA.outputs.SHA_SHORT }} master_${{ steps.converseCheckout.outputs.SHA_SHORT }}' | tr '/' '-')"
          echo "::set-output name=DIRECTORY::$(echo 'GlacierDesktopBeta_${{ steps.package-version.outputs.version }}_bld_${{ steps.buildNum.outputs.build_number }}' | tr '/' '-')"
          echo "::set-output name=RELEASE_NAME::$(echo 'GlacierDesktopBeta ${{ steps.package-version.outputs.version }} Release' | tr '/' '-')"
          echo "::set-output name=RELEASE_DIRECTORY::$(echo 'GlacierDesktopBeta_${{ steps.package-version.outputs.version }}_Release' | tr '/' '-')"

      - name: Get changelog version
        id: changelogHeader
        run: |
          if [ $REF == "refs/heads/main" ]; then
              echo "::set-output name=version::Unreleased"
            else
              echo "::set-output name=version::$VERSION"
            fi
        env:
          REF: ${{ github.ref }}
          VERSION: ${{ steps.package-version.outputs.version }}

      - name: Build metadata (non-release)
        if: github.ref == 'refs/heads/main'
        run: yarn build:metadata
        env:
          VERSION: ${{ steps.package-version.outputs.version }}
          BUILD_NUM: ${{ steps.buildNum.outputs.build_number }}
          GLACIER_BRANCH: main
          CONVERSE_BRANCH: master
          GLACIER_SHA: ${{ steps.glacierDesktopSHA.outputs.SHA_SHORT }}
          CONVERSE_SHA: ${{ steps.converseCheckout.outputs.SHA_SHORT }}

      - name: Build metadata (release)
        if: github.ref != 'refs/heads/main'
        run: yarn build:metadata
        env:
          VERSION: ${{ steps.package-version.outputs.version }}

      - name: Build Glacier Desktop app
        run: yarn build

      - name: Package app without notarization (non-release)
        if: github.ref == 'refs/heads/main'
        run: yarn electron-builder -w --mac dmg -p never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and notarize app (release)
        if: github.ref != 'refs/heads/main'
        run: yarn electron-builder -w --mac -p never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - name: Rename artifacts (non-release)
        if: github.ref == 'refs/heads/main'
        run: |
          mv dist/*.dmg "dist/$NAME.dmg"
          mv dist/*.exe "dist/$NAME.exe"
        env:
          NAME: ${{ steps.artifactName.outputs.NAME }}

      - name: Move artifacts (non-release)
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir ${{ steps.artifactName.outputs.DIRECTORY }}
          mv dist/*.exe ${{ steps.artifactName.outputs.DIRECTORY }}/
          mv dist/*.dmg ${{ steps.artifactName.outputs.DIRECTORY }}/

      - name: Move artifacts (release)
        if: github.ref != 'refs/heads/main'
        run: |
          mkdir ${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}
          mv dist/*.dmg ${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/
          mv dist/*.exe ${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/
          mv dist/latest*.yml ${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/
          mv dist/*.zip ${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/

      - name: Upload artifacts (non-release)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.artifactName.outputs.NAME }}
          path: ./${{ steps.artifactName.outputs.DIRECTORY }}/*

      - name: Upload artifacts (release)
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.artifactName.outputs.RELEASE_NAME }}
          path: ./${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/*

      # TODO: ideally this would be made obsolete by the next action.
      # See: https://github.com/softprops/action-gh-release/issues/103
      - name: Delete current draft release, if exists
        uses: hugo19941994/delete-draft-releases@v0.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create draft release if untagged commit (non-release)
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: 'v${{ steps.package-version.outputs.version }}'
          body: ${{ steps.changelog_reader.outputs.changes }}
          tag_name: 'v${{ steps.package-version.outputs.version }}'
          files: ./${{ steps.artifactName.outputs.DIRECTORY }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create draft release if tagged commit (release)
        if: github.ref != 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: 'v${{ steps.package-version.outputs.version }}'
          body: ${{ steps.changelog_reader.outputs.changes }}
          tag_name: 'v${{ steps.package-version.outputs.version }}'
          files: ./${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release if tagged commit (release)
        uses: softprops/action-gh-release@v1
        if: github.ref != 'refs/heads/main'
        with:
          repository: GlacierSecurityInc/glacierDesktop-pub
          name: 'v${{ steps.package-version.outputs.version }}'
          body: ${{ steps.changelog_reader.outputs.changes }}
          tag_name: 'v${{ steps.package-version.outputs.version }}'
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          files: ./${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/*

      - name: Delete current build number tag if tagged commit (release)
        if: github.ref != 'refs/heads/main'
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          tag_name: 'build-number-${{ steps.buildNum.outputs.build_number }}'
        env:
          GITHUB_TOKEN: ${{ github.token }}

      #- name: Reset build number to 1 if tagged commit (release)
      #  if: github.ref != 'refs/heads/main'
      #  uses: tvdias/github-tagger@v0.0.1
      #  with:
      #    repo-token: "${{ github.token }}"
      #    tag: "build-number-0"

      # COMMENTED OUT UPLOAD TO GOOGLE UNTIL WE FIX THE DISK QUOTA PROBLEM
      # - name: Upload artifact to Google Drive (non-release)
      #   if: github.ref == 'refs/heads/main'
      #   uses: codetheweb/upload-to-drive@v1.3.0
      #   id: gdrive
      #   with:
      #     target: ./${{ steps.artifactName.outputs.DIRECTORY }}/*
      #     credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
      #     folder: ${{ secrets.GDRIVE_FOLDER }}
      #     name: ${{ steps.artifactName.outputs.NAME }}.zip

      # COMMENTED OUT UPLOAD TO GOOGLE UNTIL WE FIX THE DISK QUOTA PROBLEM
      # - name: Upload artifact to Google Drive (release)
      #   if: github.ref != 'refs/heads/main'
      #   uses: codetheweb/upload-to-drive@v1.3.0
      #   id: gdriverelease
      #   with:
      #     target: ./${{ steps.artifactName.outputs.RELEASE_DIRECTORY }}/*
      #     credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
      #     folder: ${{ secrets.GDRIVE_FOLDER }}
      #     name: ${{ steps.artifactName.outputs.RELEASE_NAME }}.zip

  mirror_if_release:
    # Only put on public repository if release build successfully completes
    needs: build
    # if: github.ref != 'refs/heads/main'  # might put this line here instead of in each step
    runs-on: ubuntu-latest
    env:
      REF: ${{ github.ref }}
    steps:
      - name: Checkout Code (release-only)
        if: github.ref != 'refs/heads/main'
        uses: actions/checkout@v1

      - name: Post to Public Repo (release-only)
        if: github.ref != 'refs/heads/main'
        run: |
          git remote add mirror "https://futurealecks:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/GlacierSecurityInc/glacierDesktop-pub.git"
          git push --force --prune mirror "refs/remotes/origin/main:refs/heads/main"
          git push --force --prune mirror "refs/tags/v*:refs/tags/v*"
